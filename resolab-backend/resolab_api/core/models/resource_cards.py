from django.db import models
from django.core.validators import RegexValidator

from resolab_api.core.models.authentication import UserProfile
from resolab_api.core.models.job_roles import Job

phone_regex = RegexValidator(regex=r'^\+?1?\d{9,15}$',  message="Invalid phone number entered.")

class ResourceSeekerCardPeople(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    ssc= models.CharField(max_length=300, blank=True)
    pia_tp_name = models.CharField(max_length=100)
    legal_status = models.CharField(max_length=100)
    is_authorized = models.BooleanField(default=False)
    org_location = models.CharField(max_length=200)
    industry = models.CharField(max_length=200, default="Skilling")

    manager_name = models.CharField(max_length=120)
    manager_employee_id = models.CharField(max_length=150, blank=True)
    manager_designation = models.CharField(max_length=100)
    manager_contact_number = models.CharField(max_length=17, validators=[phone_regex])
    manager_email_id = models.EmailField(max_length=200)

    #AltContact
    manager_name_2= models.CharField(max_length=120, blank=True)
    manager_contact_number_2= models.CharField(max_length=17, validators=[phone_regex], blank=True)
    manager_email_id_2 = models.CharField(max_length=200, blank=True)
    manager_designation_2 = models.CharField(max_length=100, blank=True)

    # Resource Criteria
    qualification = models.CharField(max_length=100)
    pref_qualification = models.CharField(max_length=100)
    additional_req = models.CharField(max_length=150)
    is_exp_required = models.BooleanField(default=False)
    experience_details = models.CharField(max_length=200)
    min_salary = models.PositiveIntegerField()
    max_salary = models.PositiveIntegerField()
    joining_requirement = models.CharField(max_length=100)
    job_state = models.CharField(max_length=200, blank=True)
    job_district = models.CharField(max_length=200)
    # Verification status
    is_verified = models.BooleanField(default=False)
    core_business= models.CharField(max_length=200, blank=True)
    registered_year=models.CharField(max_length=4, blank=True)
    org_head= models.CharField(max_length=200, blank=True)

    def __str__(self):
        return '%s for %s SeekerCardID: %s' % (self.user.addedparam, self.job, self.id)

class ResourceProviderCardPeople(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    ssc= models.CharField(max_length=300, blank=True)
    aadhar_no = models.CharField(max_length=12, blank=True)
    current_work_state = models.CharField(max_length=100)
    current_work_district = models.CharField(max_length=200)
    educational_qualification = models.CharField(max_length=100)
    current_salary = models.PositiveIntegerField()
    expected_salary = models.PositiveIntegerField()
    # Work Experience
    exp_skill_industry = models.PositiveSmallIntegerField()
    project_name = models.CharField(max_length=200, blank=True)
    exp_non_skill = models.PositiveSmallIntegerField()
    industry = models.CharField(max_length=200, default="Skilling")
    # Previous organizations
    organization_1_name = models.CharField(max_length=100, blank=True)
    designation_1 = models.CharField(max_length=100, blank=True)
    total_tenure_1 = models.PositiveSmallIntegerField(blank=True)
    organization_2_name = models.CharField(max_length=100, blank=True)
    designation_2 = models.CharField(max_length=100, blank=True)
    total_tenure_2 = models.PositiveSmallIntegerField(blank=True)
    organization_3_name = models.CharField(max_length=100, blank=True)
    designation_3 = models.CharField(max_length=100, blank=True)
    total_tenure_3 = models.PositiveSmallIntegerField(blank=True)
    # Other
    achievement = models.TextField(blank=True)
    skill_1= models.CharField(max_length=100, blank=True)
    incidence_1= models.TextField(blank=True)
    skill_2= models.CharField(max_length=100, blank=True)
    incidence_2= models.TextField(blank=True)
    skill_3= models.CharField(max_length=100, blank=True)
    incidence_3= models.TextField(blank=True)
    skill_4= models.CharField(max_length=100, blank=True)
    incidence_4= models.TextField(blank=True)
    skill_5= models.CharField(max_length=100, blank=True)
    incidence_5= models.TextField(blank=True)
    # Verification status
    is_verified = models.BooleanField(default=False)
    docs_urls_1 = models.TextField(blank=True)
    doc_name_1 = models.CharField(blank=True, max_length=100)
    verified_1= models.BooleanField(default=False)
    docs_urls_2 = models.TextField(blank=True)
    doc_name_2 = models.CharField(blank=True, max_length=100)
    verified_2= models.BooleanField(default=False)
    docs_urls_3 = models.TextField(blank=True)
    doc_name_3 = models.CharField(blank=True, max_length=100)
    verified_3= models.BooleanField(default=False)
    docs_urls_4 = models.TextField(blank=True)
    doc_name_4 = models.CharField(blank=True, max_length=100)
    verified_4= models.BooleanField(default=False)
    docs_urls_5 = models.TextField(blank=True)
    doc_name_5 = models.CharField(blank=True, max_length=100)  
    verified_5= models.BooleanField(default=False)
    docs_urls_6 = models.TextField(blank=True)
    doc_name_6 = models.CharField(blank=True, max_length=100)  
    verified_6= models.BooleanField(default=False)
    docs_urls_7 = models.TextField(blank=True)
    doc_name_7 = models.CharField(blank=True, max_length=100)  
    verified_7= models.BooleanField(default=False)
    docs_urls_8 = models.TextField(blank=True)
    doc_name_8 = models.CharField(blank=True, max_length=100)  
    verified_8= models.BooleanField(default=False)
    docs_urls_9 = models.TextField(blank=True)
    doc_name_9 = models.CharField(blank=True, max_length=100)  
    verified_9= models.BooleanField(default=False)
    docs_urls_10 = models.TextField(blank=True)
    doc_name_10 = models.CharField(blank=True, max_length=100)  
    verified_10= models.BooleanField(default=False)

    def __str__(self):
        return '%s for %s ProviderCardID: %s' % (self.user.addedparam, self.job, self.id)

class ResourceSeekerCardAdvisoryAlliedServices(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    pia_tp_name = models.CharField(max_length=100)
    project = models.CharField(max_length=100)
    project_location = models.CharField(max_length=100)
    contact_name = models.CharField(max_length=200)
    contact_phone_no = models.CharField(unique=True, validators=[phone_regex], max_length=17)
    contact_designation = models.CharField(max_length=100)
    contact_email = models.EmailField(max_length=200, blank=True)
    reporting_manager_name = models.CharField(max_length=120, blank=True)
    manager_designation = models.CharField(max_length=100, blank=True)
    manager_contact_number = models.CharField(max_length=17, validators=[phone_regex], blank=True)
    manager_email_id = models.EmailField(max_length=200, blank=True)
    industry = models.CharField(max_length=200, default="Skilling")

    def __str__(self):
        return '%s for %s SeekerCardID: %s' % (self.user.addedparam, self.job, self.id)

class ResourceProviderCardAdvisoryAlliedServices(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    org_name = models.CharField(max_length=100, blank=True)
    legal_status = models.CharField(max_length=100)
    pan_card_no = models.CharField(max_length=10)
    gst_no = models.CharField(max_length=15)
    contact_name = models.CharField(max_length=200)
    contact_phone_no = models.CharField(unique=True, validators=[phone_regex], max_length=17)
    address = models.CharField(max_length=255)
    geo_presence = models.CharField(max_length=100)
    pic_urls = models.TextField()
    docs_urls_1 = models.TextField(blank=True)
    client_name_1 = models.CharField(blank=True, max_length=100)
    verified_1= models.BooleanField(default=False)
    docs_urls_2 = models.TextField(blank=True)
    client_name_2 = models.CharField(blank=True, max_length=100)
    verified_2= models.BooleanField(default=False)
    docs_urls_3 = models.TextField(blank=True)
    client_name_3 = models.CharField(blank=True, max_length=100)
    verified_3= models.BooleanField(default=False)
    docs_urls_4 = models.TextField(blank=True)
    client_name_4 = models.CharField(blank=True, max_length=100)
    verified_4= models.BooleanField(default=False)
    docs_urls_5 = models.TextField(blank=True)
    client_name_5 = models.CharField(blank=True, max_length=100)
    verified_5= models.BooleanField(default=False)
    docs_urls_6 = models.TextField(blank=True)
    client_name_6 = models.CharField(blank=True, max_length=100)
    verified_6= models.BooleanField(default=False)
    docs_urls_7 = models.TextField(blank=True)
    client_name_7 = models.CharField(blank=True, max_length=100)
    verified_7= models.BooleanField(default=False)
    docs_urls_8 = models.TextField(blank=True)
    client_name_8 = models.CharField(blank=True, max_length=100)
    verified_8= models.BooleanField(default=False)
    docs_urls_9 = models.TextField(blank=True)
    client_name_9 = models.CharField(blank=True, max_length=100)
    verified_9= models.BooleanField(default=False)
    docs_urls_10 = models.TextField(blank=True)
    client_name_10 = models.CharField(blank=True, max_length=100)
    verified_10= models.BooleanField(default=False)
    industry = models.CharField(max_length=200, default="Skilling")

    def __str__(self):
        return '%s for %s ProviderCardID: %s' % (self.user.addedparam, self.job, self.id)

class ResourceSeekerCardInfra(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    pia_tp_name = models.CharField(max_length=100)
    total_area = models.PositiveIntegerField()
    oth_requirements = models.TextField()
    project = models.CharField(max_length=100)
    project_location_state = models.CharField(max_length=100)
    project_location_district = models.CharField(max_length=100)
    contact_name = models.CharField(max_length=200)
    contact_phone_no = models.CharField(unique=True, validators=[phone_regex], max_length=17)
    contact_designation = models.CharField(max_length=100)
    contact_email = models.EmailField(max_length=200, blank=True)
    specific_facility = models.TextField()
    industry = models.CharField(max_length=200, default="Skilling")

    def __str__(self):
        return '%s for %s SeekerCardID: %s' % (self.user.addedparam, self.job, self.id)

class ResourceProviderCardInfra(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    job = models.CharField(max_length=300,blank="True")
    org_name = models.CharField(max_length=100, blank=True)
    legal_status = models.CharField(max_length=100)
    pan_card_no = models.CharField(max_length=10)
    gst_no = models.CharField(max_length=15)
    contact_name = models.CharField(max_length=200)
    contact_phone_no = models.CharField(unique=True, validators=[phone_regex], max_length=17)
    address = models.CharField(max_length=255)
    detail = models.TextField()
    total_area = models.PositiveIntegerField()
    no_halls = models.PositiveIntegerField()
    total_open_area = models.PositiveIntegerField()
    basic_facility = models.CharField(max_length=100)
    no_toilets = models.PositiveIntegerField()
    no_bathrooms = models.PositiveIntegerField()
    location_state = models.CharField(max_length=100)
    location_district = models.CharField(max_length=100)
    pic_urls = models.TextField(blank=True)
    docs_urls_1 = models.TextField(blank=True)
    client_name_1 = models.CharField(blank=True, max_length=100)
    verified_1= models.BooleanField(default=False)
    docs_urls_2 = models.TextField(blank=True)
    client_name_2 = models.CharField(blank=True, max_length=100)
    verified_2= models.BooleanField(default=False)
    docs_urls_3 = models.TextField(blank=True)
    client_name_3 = models.CharField(blank=True, max_length=100)
    verified_3= models.BooleanField(default=False)
    docs_urls_4 = models.TextField(blank=True)
    client_name_4 = models.CharField(blank=True, max_length=100)
    verified_4= models.BooleanField(default=False)
    docs_urls_5 = models.TextField(blank=True)
    client_name_5 = models.CharField(blank=True, max_length=100)  
    verified_5= models.BooleanField(default=False)
    docs_urls_6 = models.TextField(blank=True)
    client_name_6 = models.CharField(blank=True, max_length=100)  
    verified_6= models.BooleanField(default=False)
    docs_urls_7 = models.TextField(blank=True)
    client_name_7 = models.CharField(blank=True, max_length=100)  
    verified_7= models.BooleanField(default=False)
    docs_urls_8 = models.TextField(blank=True)
    client_name_8 = models.CharField(blank=True, max_length=100)  
    verified_8= models.BooleanField(default=False)
    docs_urls_9 = models.TextField(blank=True)
    client_name_9 = models.CharField(blank=True, max_length=100)  
    verified_9= models.BooleanField(default=False)
    docs_urls_10 = models.TextField(blank=True)
    client_name_10 = models.CharField(blank=True, max_length=100)  
    verified_10= models.BooleanField(default=False)
    verified_docs_urls = models.TextField(blank=True)
    industry = models.CharField(max_length=200, default="Skilling")

    def __str__(self):
        return '%s for %s ProviderCardID: %s' % (self.user.addedparam, self.job, self.id)

class ConnectForm(models.Model):
    sender = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    intrested = models.BooleanField(default=False)    
    next_process = models.BooleanField(default=False)    
    share_info = models.BooleanField(default=False)    
    alt_phone_number = models.CharField(max_length=17,blank=True )
    wa_number = models.CharField(max_length=17,blank=True )
    receiver = models.CharField(max_length=400, blank=True)

    def __str__(self):
        return 'ConnectForm: %s' % (self.id)
